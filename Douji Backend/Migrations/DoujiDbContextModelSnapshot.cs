// <auto-generated />
using System;
using Douji.Backend.Data.Database.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Douji.Backend.Migrations
{
	[DbContext(typeof(DoujiDbContext))]
	partial class DoujiDbContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "9.0.4")
				.HasAnnotation("Proxies:ChangeTracking", false)
				.HasAnnotation("Proxies:CheckEquality", false)
				.HasAnnotation("Proxies:LazyLoading", true);

			modelBuilder.Entity("Douji.Backend.Data.Database.DTO.RoomDatabaseDTO", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER")
						.HasColumnName("id");

					b.Property<string>("CurrentlyPlayedUrl")
						.HasColumnType("TEXT")
						.HasColumnName("currentlyPlayedUrl");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("TEXT")
						.HasColumnName("name");

					b.Property<string>("PasswordHash")
						.HasColumnType("TEXT")
						.HasColumnName("passwordHash");

					b.HasKey("Id")
						.HasName("pK_rooms");

					b.ToTable("rooms", (string)null);
				});

			modelBuilder.Entity("Douji.Backend.Data.Database.DTO.UserDatabaseDTO", b =>
				{
					b.Property<int>("Id")
						.ValueGeneratedOnAdd()
						.HasColumnType("INTEGER")
						.HasColumnName("id");

					b.Property<int>("ClientState")
						.HasColumnType("INTEGER")
						.HasColumnName("clientState");

					b.Property<string>("ConnectionId")
						.IsRequired()
						.HasColumnType("TEXT")
						.HasColumnName("connectionId");

					b.Property<string>("Name")
						.IsRequired()
						.HasColumnType("TEXT")
						.HasColumnName("name");

					b.Property<int>("RoomId")
						.HasColumnType("INTEGER")
						.HasColumnName("roomId");

					b.Property<DateTime>("UpdatedAt")
						.HasColumnType("TEXT")
						.HasColumnName("updatedAt");

					b.Property<double?>("VideoTime")
						.HasColumnType("REAL")
						.HasColumnName("videoTime");

					b.HasKey("Id")
						.HasName("pK_users");

					b.HasIndex("ConnectionId")
						.IsUnique()
						.HasDatabaseName("iX_users_connectionId");

					b.HasIndex("RoomId")
						.HasDatabaseName("iX_users_roomId");

					b.ToTable("users", (string)null);
				});

			modelBuilder.Entity("Douji.Backend.Data.Database.DTO.UserDatabaseDTO", b =>
				{
					b.HasOne("Douji.Backend.Data.Database.DTO.RoomDatabaseDTO", "Room")
						.WithMany("Users")
						.HasForeignKey("RoomId")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired()
						.HasConstraintName("fK_users_rooms_roomId");

					b.Navigation("Room");
				});

			modelBuilder.Entity("Douji.Backend.Data.Database.DTO.RoomDatabaseDTO", b =>
				{
					b.Navigation("Users");
				});
#pragma warning restore 612, 618
		}
	}
}
